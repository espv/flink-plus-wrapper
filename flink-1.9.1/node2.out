nohup: ignoring input
Starting execution of program
SETUP
Connecting to coordinator at ip localhost:50000
Before handling {task=SetNidToAddress, administrative=true, arguments=[{1={port=9092, ip=localhost}, 2={port=9092, ip=localhost}}]}
After handling {task=SetNidToAddress, administrative=true, arguments=[{1={port=9092, ip=localhost}, 2={port=9092, ip=localhost}}]}
Before handling {task=AddTpIds, arguments=[0, 1, 100, 221, 200, 201, 202, 203]}
After handling {task=AddTpIds, arguments=[0, 1, 100, 221, 200, 201, 202, 203]}
Before handling {task=AddSchemas, arguments=[{id=9, stream-id=16, name=trafficRouteStream, rowtime-column={column=t, nanoseconds-per-tick=1000000000}, timestamps=[{column=absTime, format=%Y-%m-%dT%H:%M:%SZ}], tuple-format=[{name=t, type=long-timestamp}, {name=lane, type=int}, {name=x, type=double}, {name=v, type=double}, {name=a, type=double}, {name=gap, type=double}, {name=dv, type=double}, {name=label, type=string}, {name=id, type=int}, {name=roadId, type=int}, {name=originId, type=int}, {name=absTime, type=string}, {name=xWithOffset, type=double}]}, {id=10, stream-id=23, name=outTrafficRouteStream, rowtime-column={column=t, nanoseconds-per-tick=1000000000}, timestamps=[{column=absTime, format=%Y-%m-%dT%H:%M:%SZ}], tuple-format=[{name=t, type=long-timestamp}, {name=lane, type=int}, {name=x, type=double}, {name=v, type=double}, {name=a, type=double}, {name=gap, type=double}, {name=dv, type=double}, {name=label, type=string}, {name=id, type=int}, {name=roadId, type=int}, {name=originId, type=int}, {name=absTime, type=string}, {name=xWithOffset, type=double}]}, {id=11, stream-id=24, name=averageSpeedStream, tuple-format=[{name=avgSpeed, type=double}, {name=label, type=string}, {name=roadId, type=int}]}, {id=12, stream-id=17, name=ValidLocationEvent, rowtime-column={column=ts, nanoseconds-per-tick=1000000000}, tuple-format=[{name=id, type=int}, {name=ts, type=long-timestamp}, {name=road, type=int}, {name=speed, type=double}, {name=dist, type=double}, {name=lane, type=int}, {name=segmentId, type=int}]}]}
After handling {task=AddSchemas, arguments=[{id=9, stream-id=16, name=trafficRouteStream, rowtime-column={column=t, nanoseconds-per-tick=1000000000}, timestamps=[{column=absTime, format=%Y-%m-%dT%H:%M:%SZ}], tuple-format=[{name=eventTime.rowtime, type=long-timestamp}, {name=lane, type=int}, {name=x, type=double}, {name=v, type=double}, {name=a, type=double}, {name=gap, type=double}, {name=dv, type=double}, {name=label, type=string}, {name=id, type=int}, {name=roadId, type=int}, {name=originId, type=int}, {name=absTime, type=string}, {name=xWithOffset, type=double}]}, {id=10, stream-id=23, name=outTrafficRouteStream, rowtime-column={column=t, nanoseconds-per-tick=1000000000}, timestamps=[{column=absTime, format=%Y-%m-%dT%H:%M:%SZ}], tuple-format=[{name=eventTime.rowtime, type=long-timestamp}, {name=lane, type=int}, {name=x, type=double}, {name=v, type=double}, {name=a, type=double}, {name=gap, type=double}, {name=dv, type=double}, {name=label, type=string}, {name=id, type=int}, {name=roadId, type=int}, {name=originId, type=int}, {name=absTime, type=string}, {name=xWithOffset, type=double}]}, {id=11, stream-id=24, name=averageSpeedStream, tuple-format=[{name=avgSpeed, type=double}, {name=label, type=string}, {name=roadId, type=int}]}, {id=12, stream-id=17, name=ValidLocationEvent, rowtime-column={column=ts, nanoseconds-per-tick=1000000000}, tuple-format=[{name=id, type=int}, {name=eventTime.rowtime, type=long-timestamp}, {name=road, type=int}, {name=speed, type=double}, {name=dist, type=double}, {name=lane, type=int}, {name=segmentId, type=int}]}]}
Before handling {task=SetNidToAddress, administrative=true, arguments=[{1={port=9092, ip=localhost}, 2={port=9092, ip=localhost}, 3={port=9092, ip=localhost}}]}
After handling {task=SetNidToAddress, administrative=true, arguments=[{1={port=9092, ip=localhost}, 2={port=9092, ip=localhost}, 3={port=9092, ip=localhost}}]}
Before handling {task=Configure, administrative=true}
Subscribing to kafka topic trafficRouteStream-2
Subscribing to kafka topic ValidLocationEvent-2
Subscribing to kafka topic outTrafficRouteStream-2
Subscribing to kafka topic averageSpeedStream-2
After handling {task=Configure, administrative=true}
Before handling {task=AddNextHop, arguments=[23, 3]}
After handling {task=AddNextHop, arguments=[23, 3]}
Before handling {task=DeployQueries, arguments=[{name=traffic, id=12, output-stream-id=23, input-stream-ids=[16], type=fetch-query, print=true, sql-query={t-rex= Assign 16 => Traffic, 23 => OutTraffic Define  OutTraffic(t: float, lane: int, x: float, v: float, a: float, gap: float, dv: float, label: string, id: int, roadId: int, originId: int, absTime: string, xWithOffset: float) From   Traffic() Where t := Traffic.t, lane := Traffic.lane, x := Traffic.x, v := Traffic.v, a := Traffic.a, gap := Traffic.gap, dv := Traffic.dv, label := Traffic.label, id := Traffic.id, roadId := Traffic.roadId, originId := Traffic.originId, absTime := Traffic.absTime, xWithOffset := Traffic.xWithOffset Consuming Traffic; , siddhi=from trafficRouteStream select * insert into outTrafficRouteStream; , flink=SELECT * FROM trafficRouteStream , esper=insert into outTrafficRouteStream select * from trafficRouteStream; }}]}
After handling {task=DeployQueries, arguments=[{name=traffic, id=12, output-stream-id=23, input-stream-ids=[16], type=fetch-query, print=true, sql-query={t-rex= Assign 16 => Traffic, 23 => OutTraffic Define  OutTraffic(t: float, lane: int, x: float, v: float, a: float, gap: float, dv: float, label: string, id: int, roadId: int, originId: int, absTime: string, xWithOffset: float) From   Traffic() Where t := Traffic.t, lane := Traffic.lane, x := Traffic.x, v := Traffic.v, a := Traffic.a, gap := Traffic.gap, dv := Traffic.dv, label := Traffic.label, id := Traffic.id, roadId := Traffic.roadId, originId := Traffic.originId, absTime := Traffic.absTime, xWithOffset := Traffic.xWithOffset Consuming Traffic; , siddhi=from trafficRouteStream select * insert into outTrafficRouteStream; , flink=SELECT * FROM trafficRouteStream , esper=insert into outTrafficRouteStream select * from trafficRouteStream; }}]}
Before handling {task=TraceTuple, arguments=[0, []]}
TraceTuple, tracepointId: 0, arguments: []
After tracing
After handling {task=TraceTuple, arguments=[0, []]}
Before handling {task=StartRuntimeEnv}
After handling {task=StartRuntimeEnv}
Before handling {task=RetEndOfStream, arguments=[1000]}
org.apache.flink.client.program.ProgramInvocationException: Job failed. (JobID: 95c440061a44768378a439b69a965e63)
	at org.apache.flink.client.program.rest.RestClusterClient.submitJob(RestClusterClient.java:262)
	at org.apache.flink.client.program.ClusterClient.run(ClusterClient.java:338)
	at org.apache.flink.streaming.api.environment.StreamContextEnvironment.execute(StreamContextEnvironment.java:60)
	at org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1507)
	at org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1489)
	at org.apache.flink.experiments.FlinkExperimentFramework.lambda$StartRuntimeEnv$0(FlinkExperimentFramework.java:516)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.flink.runtime.client.JobExecutionException: Job execution failed.
	at org.apache.flink.runtime.jobmaster.JobResult.toJobExecutionResult(JobResult.java:146)
	at org.apache.flink.client.program.rest.RestClusterClient.submitJob(RestClusterClient.java:259)
	... 6 more
Caused by: java.nio.file.FileAlreadyExistsException: File already exists: /home/espen/outputFromFlink.txt/2
	at org.apache.flink.core.fs.local.LocalFileSystem.create(LocalFileSystem.java:264)
	at org.apache.flink.core.fs.SafetyNetWrapperFileSystem.create(SafetyNetWrapperFileSystem.java:126)
	at org.apache.flink.api.common.io.FileOutputFormat.open(FileOutputFormat.java:248)
	at org.apache.flink.api.java.io.TextOutputFormat.open(TextOutputFormat.java:88)
	at org.apache.flink.streaming.api.functions.sink.OutputFormatSinkFunction.open(OutputFormatSinkFunction.java:65)
	at org.apache.flink.api.common.functions.util.FunctionUtils.openFunction(FunctionUtils.java:36)
	at org.apache.flink.streaming.api.operators.AbstractUdfStreamOperator.open(AbstractUdfStreamOperator.java:102)
	at org.apache.flink.streaming.api.operators.StreamSink.open(StreamSink.java:48)
	at org.apache.flink.streaming.runtime.tasks.StreamTask.openAllOperators(StreamTask.java:532)
	at org.apache.flink.streaming.runtime.tasks.StreamTask.invoke(StreamTask.java:396)
	at org.apache.flink.runtime.taskmanager.Task.doRun(Task.java:705)
	at org.apache.flink.runtime.taskmanager.Task.run(Task.java:530)
	... 1 more
Stopping the execution environment
java.io.FileNotFoundException: /home/espen/outputFromFlink.txt (Is a directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileInputStream.<init>(FileInputStream.java:93)
	at java.io.FileReader.<init>(FileReader.java:58)
	at org.apache.flink.experiments.FlinkExperimentFramework.RetEndOfStream(FlinkExperimentFramework.java:659)
	at no.uio.ifi.SpeComm.HandleEvent(SpeComm.java:206)
	at no.uio.ifi.SpeComm.AcceptTasks(SpeComm.java:120)
	at org.apache.flink.experiments.FlinkExperimentFramework.main(FlinkExperimentFramework.java:755)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.flink.client.program.PackagedProgram.callMainMethod(PackagedProgram.java:576)
	at org.apache.flink.client.program.PackagedProgram.invokeInteractiveModeForExecution(PackagedProgram.java:438)
	at org.apache.flink.client.program.ClusterClient.run(ClusterClient.java:274)
	at org.apache.flink.client.cli.CliFrontend.executeProgram(CliFrontend.java:746)
	at org.apache.flink.client.cli.CliFrontend.runProgram(CliFrontend.java:273)
	at org.apache.flink.client.cli.CliFrontend.run(CliFrontend.java:205)
	at org.apache.flink.client.cli.CliFrontend.parseParameters(CliFrontend.java:1010)
	at org.apache.flink.client.cli.CliFrontend.lambda$main$10(CliFrontend.java:1083)
	at org.apache.flink.runtime.security.NoOpSecurityContext.runSecured(NoOpSecurityContext.java:30)
	at org.apache.flink.client.cli.CliFrontend.main(CliFrontend.java:1083)

------------------------------------------------------------
 The program finished with the following exception:

org.apache.flink.client.program.ProgramInvocationException: The main method caused an error: null
	at org.apache.flink.client.program.PackagedProgram.callMainMethod(PackagedProgram.java:593)
	at org.apache.flink.client.program.PackagedProgram.invokeInteractiveModeForExecution(PackagedProgram.java:438)
	at org.apache.flink.client.program.ClusterClient.run(ClusterClient.java:274)
	at org.apache.flink.client.cli.CliFrontend.executeProgram(CliFrontend.java:746)
	at org.apache.flink.client.cli.CliFrontend.runProgram(CliFrontend.java:273)
	at org.apache.flink.client.cli.CliFrontend.run(CliFrontend.java:205)
	at org.apache.flink.client.cli.CliFrontend.parseParameters(CliFrontend.java:1010)
	at org.apache.flink.client.cli.CliFrontend.lambda$main$10(CliFrontend.java:1083)
	at org.apache.flink.runtime.security.NoOpSecurityContext.runSecured(NoOpSecurityContext.java:30)
	at org.apache.flink.client.cli.CliFrontend.main(CliFrontend.java:1083)
Caused by: java.lang.NullPointerException
	at java.io.Reader.<init>(Reader.java:78)
	at java.io.BufferedReader.<init>(BufferedReader.java:101)
	at java.io.BufferedReader.<init>(BufferedReader.java:116)
	at org.apache.flink.experiments.FlinkExperimentFramework.RetEndOfStream(FlinkExperimentFramework.java:663)
	at no.uio.ifi.SpeComm.HandleEvent(SpeComm.java:206)
	at no.uio.ifi.SpeComm.AcceptTasks(SpeComm.java:120)
	at org.apache.flink.experiments.FlinkExperimentFramework.main(FlinkExperimentFramework.java:755)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.flink.client.program.PackagedProgram.callMainMethod(PackagedProgram.java:576)
	... 9 more
