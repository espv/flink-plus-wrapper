nohup: ignoring input
log4j:WARN No appenders could be found for logger (org.apache.flink.client.cli.CliFrontend).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
Starting execution of program
Connecting to coordinator at ip localhost:50000
Before handling {task=SetNidToAddress, administrative=true, arguments=[{1={port=9092, ip=localhost}, 2={port=9092, ip=localhost}, 3={port=9092, ip=localhost}}]}
After handling {task=SetNidToAddress, administrative=true, arguments=[{1={port=9092, ip=localhost}, 2={port=9092, ip=localhost}, 3={port=9092, ip=localhost}}]}
Before handling {task=AddTpIds, arguments=[0, 1, 100, 221, 200, 201, 202, 203]}
After handling {task=AddTpIds, arguments=[0, 1, 100, 221, 200, 201, 202, 203]}
Before handling {task=AddSchemas, arguments=[{id=9, stream-id=16, name=trafficRouteStream, rowtime-column={column=t, nanoseconds-per-tick=1000000000}, timestamps=[{column=absTime, format=%Y-%m-%dT%H:%M:%SZ}], tuple-format=[{name=t, type=long-timestamp}, {name=lane, type=int}, {name=x, type=double}, {name=v, type=double}, {name=a, type=double}, {name=gap, type=double}, {name=dv, type=double}, {name=label, type=string}, {name=id, type=int}, {name=roadId, type=int}, {name=originId, type=int}, {name=absTime, type=string}, {name=xWithOffset, type=double}]}, {id=10, stream-id=23, name=outTrafficRouteStream, rowtime-column={column=t, nanoseconds-per-tick=1000000000}, timestamps=[{column=absTime, format=%Y-%m-%dT%H:%M:%SZ}], tuple-format=[{name=t, type=long-timestamp}, {name=lane, type=int}, {name=x, type=double}, {name=v, type=double}, {name=a, type=double}, {name=gap, type=double}, {name=dv, type=double}, {name=label, type=string}, {name=id, type=int}, {name=roadId, type=int}, {name=originId, type=int}, {name=absTime, type=string}, {name=xWithOffset, type=double}]}, {id=11, stream-id=24, name=averageSpeedStream, tuple-format=[{name=avgSpeed, type=double}, {name=label, type=string}, {name=roadId, type=int}]}, {id=12, stream-id=17, name=ValidLocationEvent, rowtime-column={column=ts, nanoseconds-per-tick=1000000000}, tuple-format=[{name=id, type=int}, {name=ts, type=long-timestamp}, {name=road, type=int}, {name=speed, type=double}, {name=dist, type=double}, {name=lane, type=int}, {name=segmentId, type=int}]}]}
After handling {task=AddSchemas, arguments=[{id=9, stream-id=16, name=trafficRouteStream, rowtime-column={column=t, nanoseconds-per-tick=1000000000}, timestamps=[{column=absTime, format=%Y-%m-%dT%H:%M:%SZ}], tuple-format=[{name=eventTime.rowtime, type=long-timestamp}, {name=lane, type=int}, {name=x, type=double}, {name=v, type=double}, {name=a, type=double}, {name=gap, type=double}, {name=dv, type=double}, {name=label, type=string}, {name=id, type=int}, {name=roadId, type=int}, {name=originId, type=int}, {name=absTime, type=string}, {name=xWithOffset, type=double}]}, {id=10, stream-id=23, name=outTrafficRouteStream, rowtime-column={column=t, nanoseconds-per-tick=1000000000}, timestamps=[{column=absTime, format=%Y-%m-%dT%H:%M:%SZ}], tuple-format=[{name=eventTime.rowtime, type=long-timestamp}, {name=lane, type=int}, {name=x, type=double}, {name=v, type=double}, {name=a, type=double}, {name=gap, type=double}, {name=dv, type=double}, {name=label, type=string}, {name=id, type=int}, {name=roadId, type=int}, {name=originId, type=int}, {name=absTime, type=string}, {name=xWithOffset, type=double}]}, {id=11, stream-id=24, name=averageSpeedStream, tuple-format=[{name=avgSpeed, type=double}, {name=label, type=string}, {name=roadId, type=int}]}, {id=12, stream-id=17, name=ValidLocationEvent, rowtime-column={column=ts, nanoseconds-per-tick=1000000000}, tuple-format=[{name=id, type=int}, {name=eventTime.rowtime, type=long-timestamp}, {name=road, type=int}, {name=speed, type=double}, {name=dist, type=double}, {name=lane, type=int}, {name=segmentId, type=int}]}]}
Before handling {task=Configure, administrative=true}
Subscribing to kafka topic trafficRouteStream-3
Subscribing to kafka topic ValidLocationEvent-3
Subscribing to kafka topic outTrafficRouteStream-3
Subscribing to kafka topic averageSpeedStream-3
After handling {task=Configure, administrative=true}
Before handling {task=StartRuntimeEnv}
After handling {task=StartRuntimeEnv}
Before handling {task=RetEndOfStream, arguments=[1000]}
Before handling {task=StopRuntimeEnv}
Before tf.traceEvent(101);
Before threadRunningEnvironment.interrupt();
Before threadRunningEnvironment.join();
Before for (int stream_id : streamIdToDataStream.keySet())
ds.addSink(regularSinkFunctions.get(stream_id));
ds.addSink(regularSinkFunctions.get(stream_id));
org.apache.flink.client.program.ProgramInvocationException: Could not retrieve the execution result. (JobID: 7d1ee86f3651a75cd5fe820734605375)
	at org.apache.flink.client.program.rest.RestClusterClient.submitJob(RestClusterClient.java:255)
	at org.apache.flink.client.program.ClusterClient.run(ClusterClient.java:338)
	at org.apache.flink.streaming.api.environment.StreamContextEnvironment.execute(StreamContextEnvironment.java:60)
	at org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1507)
	at org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1489)
	at org.apache.flink.experiments.FlinkExperimentFramework.lambda$StartRuntimeEnv$0(FlinkExperimentFramework.java:518)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.InterruptedException
	at java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:347)ds.addSink(regularSinkFunctions.get(stream_id));

	at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1908)
	at org.apache.flink.client.program.rest.RestClusterClient.submitJob(RestClusterClient.java:252)
	... 6 more
Stopping the execution environment
ds.addSink(regularSinkFunctions.get(stream_id));
Before tf.writeTraceToFile(this.trace_output_folder, this.getClass().getSimpleName());
Trace output written to /home/espen/Research/PhD/Private-WIP/traces/flink/FlinkExperimentFramework-78251174233482-c29789bb-7ec2-4446-b85b-d2559bca89ba.trace
Before return "Success"
After handling {task=StopRuntimeEnv}
Before handling {task=StartRuntimeEnv}
After handling {task=StartRuntimeEnv}
Before handling {task=RetEndOfStream, arguments=[1000]}
org.apache.flink.client.program.ProgramInvocationException: Job failed. (JobID: 9526999355136a0657bb3e830b870a88)
	at org.apache.flink.client.program.rest.RestClusterClient.submitJob(RestClusterClient.java:262)
	at org.apache.flink.client.program.ClusterClient.run(ClusterClient.java:338)
	at org.apache.flink.streaming.api.environment.StreamContextEnvironment.execute(StreamContextEnvironment.java:60)
	at org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1507)
	at org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1489)
	at org.apache.flink.experiments.FlinkExperimentFramework.lambda$StartRuntimeEnv$0(FlinkExperimentFramework.java:518)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.flink.runtime.client.JobCancellationException: Job was cancelled.
	at org.apache.flink.runtime.jobmaster.JobResult.toJobExecutionResult(JobResult.java:148)
	at org.apache.flink.client.program.rest.RestClusterClient.submitJob(RestClusterClient.java:259)
	... 6 more
Stopping the execution environment
Before handling {task=StopRuntimeEnv}
Before tf.traceEvent(101);
Before threadRunningEnvironment.interrupt();
Before threadRunningEnvironment.join();
Before for (int stream_id : streamIdToDataStream.keySet())
ds.addSink(regularSinkFunctions.get(stream_id));
ds.addSink(regularSinkFunctions.get(stream_id));
ds.addSink(regularSinkFunctions.get(stream_id));
ds.addSink(regularSinkFunctions.get(stream_id));
Before tf.writeTraceToFile(this.trace_output_folder, this.getClass().getSimpleName());
Trace output written to /home/espen/Research/PhD/Private-WIP/traces/flink/FlinkExperimentFramework-78251174233482-c29789bb-7ec2-4446-b85b-d2559bca89ba.trace
Before return "Success"
After handling {task=StopRuntimeEnv}
Before handling {task=StartRuntimeEnv}
After handling {task=StartRuntimeEnv}
Before handling {task=RetEndOfStream, arguments=[1000]}
Before handling {task=StopRuntimeEnv}
Before tf.traceEvent(101);
Before threadRunningEnvironment.interrupt();
Before threadRunningEnvironment.join();
Before for (int stream_id : streamIdToDataStream.keySet())
ds.addSink(regularSinkFunctions.get(stream_id));
org.apache.flink.client.program.ProgramInvocationException: Could not retrieve the execution result. (JobID: 3cb58eac5e9628221e03576cf48eb286)
	at org.apache.flink.client.program.rest.RestClusterClient.submitJob(RestClusterClient.java:255)
	at org.apache.flink.client.program.ClusterClient.run(ClusterClient.java:338)
	at org.apache.flink.streaming.api.environment.StreamContextEnvironment.execute(StreamContextEnvironment.java:60)
	at org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1507)
	at org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1489)
	at org.apache.flink.experiments.FlinkExperimentFramework.lambda$StartRuntimeEnv$0(FlinkExperimentFramework.java:518)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.InterruptedException
	at java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:347)
	at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1908)
	at org.apache.flink.client.program.rest.RestClusterClient.submitJob(RestClusterClient.java:252)
	... 6 more
Stopping the execution environment
ds.addSink(regularSinkFunctions.get(stream_id));
ds.addSink(regularSinkFunctions.get(stream_id));
ds.addSink(regularSinkFunctions.get(stream_id));
Before tf.writeTraceToFile(this.trace_output_folder, this.getClass().getSimpleName());
Trace output written to /home/espen/Research/PhD/Private-WIP/traces/flink/FlinkExperimentFramework-78251174233482-c29789bb-7ec2-4446-b85b-d2559bca89ba.trace
Before return "Success"
After handling {task=StopRuntimeEnv}
Before handling {task=StartRuntimeEnv}
After handling {task=StartRuntimeEnv}
Before handling {task=RetEndOfStream, arguments=[1000]}
Before handling {task=StopRuntimeEnv}
Before tf.traceEvent(101);
Before threadRunningEnvironment.interrupt();
Before threadRunningEnvironment.join();
Before for (int stream_id : streamIdToDataStream.keySet())
org.apache.flink.client.program.ProgramInvocationException: Could not retrieve the execution result. (JobID: 491fdd6b2e53f400355888d747fbf4c1)
	at org.apache.flink.client.program.rest.RestClusterClient.submitJob(RestClusterClient.java:255)
	at org.apache.flink.client.program.ClusterClient.run(ClusterClient.java:338)
	at org.apache.flink.streaming.api.environment.StreamContextEnvironment.execute(StreamContextEnvironment.java:60)
	at org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1507)
	at org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1489)
	at org.apache.flink.experiments.FlinkExperimentFramework.lambda$StartRuntimeEnv$0(FlinkExperimentFramework.java:518)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.InterruptedException
	at java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:347)
	at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1908)
	at org.apache.flink.client.program.rest.RestClusterClient.submitJob(RestClusterClient.java:252)
	... 6 more
ds.addSink(regularSinkFunctions.get(stream_id));
ds.addSink(regularSinkFunctions.get(stream_id));
ds.addSink(regularSinkFunctions.get(stream_id));
ds.addSink(regularSinkFunctions.get(stream_id));
Stopping the execution environment
Before tf.writeTraceToFile(this.trace_output_folder, this.getClass().getSimpleName());
Trace output written to /home/espen/Research/PhD/Private-WIP/traces/flink/FlinkExperimentFramework-78251174233482-c29789bb-7ec2-4446-b85b-d2559bca89ba.trace
Before return "Success"
After handling {task=StopRuntimeEnv}
Before handling {task=StartRuntimeEnv}
After handling {task=StartRuntimeEnv}
Before handling {task=RetEndOfStream, arguments=[1000]}
Before handling {task=StopRuntimeEnv}
Before tf.traceEvent(101);
Before threadRunningEnvironment.interrupt();
Before threadRunningEnvironment.join();
Before for (int stream_id : streamIdToDataStream.keySet())
ds.addSink(regularSinkFunctions.get(stream_id));
org.apache.flink.client.program.ProgramInvocationException: Could not retrieve the execution result. (JobID: e7998e51f1bbbc3594136fcbf5dc7a6e)
	at org.apache.flink.client.program.rest.RestClusterClient.submitJob(RestClusterClient.java:255)
	at org.apache.flink.client.program.ClusterClient.run(ClusterClient.java:338)
	at org.apache.flink.streaming.api.environment.StreamContextEnvironment.execute(StreamContextEnvironment.java:60)
	at org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1507)
	at org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1489)
	at org.apache.flink.experiments.FlinkExperimentFramework.lambda$StartRuntimeEnv$0(FlinkExperimentFramework.java:518)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.InterruptedException
	at java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:347)
	at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1908)
	at org.apache.flink.client.program.rest.RestClusterClient.submitJob(RestClusterClient.java:252)
	... 6 more
Stopping the execution environment
ds.addSink(regularSinkFunctions.get(stream_id));
ds.addSink(regularSinkFunctions.get(stream_id));
ds.addSink(regularSinkFunctions.get(stream_id));
Before tf.writeTraceToFile(this.trace_output_folder, this.getClass().getSimpleName());
Trace output written to /home/espen/Research/PhD/Private-WIP/traces/flink/FlinkExperimentFramework-78251174233482-c29789bb-7ec2-4446-b85b-d2559bca89ba.trace
Before return "Success"
After handling {task=StopRuntimeEnv}
Before handling {task=StartRuntimeEnv}
After handling {task=StartRuntimeEnv}
Before handling {task=RetEndOfStream, arguments=[1000]}
Before handling {task=StopRuntimeEnv}
Before tf.traceEvent(101);
Before threadRunningEnvironment.interrupt();
Before threadRunningEnvironment.join();
Before for (int stream_id : streamIdToDataStream.keySet())
ds.addSink(regularSinkFunctions.get(stream_id));
ds.addSink(regularSinkFunctions.get(stream_id));
org.apache.flink.client.program.ProgramInvocationException: Could not retrieve the execution result. (JobID: 49e5dd3798c2c21af6c9fec5d0118728)
	at org.apache.flink.client.program.rest.RestClusterClient.submitJob(RestClusterClient.java:255)
	at org.apache.flink.client.program.ClusterClient.run(ClusterClient.java:338)
	at org.apache.flink.streaming.api.environment.StreamContextEnvironment.execute(StreamContextEnvironment.java:60)
	at org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1507)
	at org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1489)
	at org.apache.flink.experiments.FlinkExperimentFramework.lambda$StartRuntimeEnv$0(FlinkExperimentFramework.java:518)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.InterruptedException
	at java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:347)
	at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1908)
	at org.apache.flink.client.program.rest.RestClusterClient.submitJob(RestClusterClient.java:252)
	... 6 more
Stopping the execution environment
ds.addSink(regularSinkFunctions.get(stream_id));
ds.addSink(regularSinkFunctions.get(stream_id));
Before tf.writeTraceToFile(this.trace_output_folder, this.getClass().getSimpleName());
Trace output written to /home/espen/Research/PhD/Private-WIP/traces/flink/FlinkExperimentFramework-78251174233482-c29789bb-7ec2-4446-b85b-d2559bca89ba.trace
Before return "Success"
After handling {task=StopRuntimeEnv}
Before handling {task=StartRuntimeEnv}
After handling {task=StartRuntimeEnv}
Before handling {task=RetEndOfStream, arguments=[1000]}
Before handling {task=StopRuntimeEnv}
Before tf.traceEvent(101);
Before threadRunningEnvironment.interrupt();
Before threadRunningEnvironment.join();
Before for (int stream_id : streamIdToDataStream.keySet())
ds.addSink(regularSinkFunctions.get(stream_id));
org.apache.flink.client.program.ProgramInvocationException: Could not retrieve the execution result. (JobID: b6b049c906a3a04a3f7c42356eeaa36b)
	at org.apache.flink.client.program.rest.RestClusterClient.submitJob(RestClusterClient.java:255)
	at org.apache.flink.client.program.ClusterClient.run(ClusterClient.java:338)
	at org.apache.flink.streaming.api.environment.StreamContextEnvironment.execute(StreamContextEnvironment.java:60)
	at org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1507)
	at org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1489)
	at org.apache.flink.experiments.FlinkExperimentFramework.lambda$StartRuntimeEnv$0(FlinkExperimentFramework.java:518)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.InterruptedException
	at java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:347)
	at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1908)
	at org.apache.flink.client.program.rest.RestClusterClient.submitJob(RestClusterClient.java:252)
	... 6 more
Stopping the execution environment
ds.addSink(regularSinkFunctions.get(stream_id));
ds.addSink(regularSinkFunctions.get(stream_id));
ds.addSink(regularSinkFunctions.get(stream_id));
Before tf.writeTraceToFile(this.trace_output_folder, this.getClass().getSimpleName());
Trace output written to /home/espen/Research/PhD/Private-WIP/traces/flink/FlinkExperimentFramework-78251174233482-c29789bb-7ec2-4446-b85b-d2559bca89ba.trace
Before return "Success"
After handling {task=StopRuntimeEnv}
Before handling {task=StartRuntimeEnv}
After handling {task=StartRuntimeEnv}
Before handling {task=RetEndOfStream, arguments=[1000]}
Before handling {task=StopRuntimeEnv}
Before tf.traceEvent(101);
Before threadRunningEnvironment.interrupt();
Before threadRunningEnvironment.join();
Before for (int stream_id : streamIdToDataStream.keySet())
ds.addSink(regularSinkFunctions.get(stream_id));
org.apache.flink.client.program.ProgramInvocationException: Could not retrieve the execution result. (JobID: a1217802d3f4e127226974ff1e4a5719)
	at org.apache.flink.client.program.rest.RestClusterClient.submitJob(RestClusterClient.java:255)
	at org.apache.flink.client.program.ClusterClient.run(ClusterClient.java:338)
	at org.apache.flink.streaming.api.environment.StreamContextEnvironment.execute(StreamContextEnvironment.java:60)
	at org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1507)
	at org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1489)
	at org.apache.flink.experiments.FlinkExperimentFramework.lambda$StartRuntimeEnv$0(FlinkExperimentFramework.java:518)
	at java.lang.Thread.run(Thread.java:748)
ds.addSink(regularSinkFunctions.get(stream_id));Caused by: java.lang.InterruptedException

	at java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:347)
	at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1908)
	at org.apache.flink.client.program.rest.RestClusterClient.submitJob(RestClusterClient.java:252)
	... 6 more
Stopping the execution environment
ds.addSink(regularSinkFunctions.get(stream_id));
ds.addSink(regularSinkFunctions.get(stream_id));
Before tf.writeTraceToFile(this.trace_output_folder, this.getClass().getSimpleName());
Trace output written to /home/espen/Research/PhD/Private-WIP/traces/flink/FlinkExperimentFramework-78251174233482-c29789bb-7ec2-4446-b85b-d2559bca89ba.trace
Before return "Success"
After handling {task=StopRuntimeEnv}
Before handling {task=StartRuntimeEnv}
After handling {task=StartRuntimeEnv}
Before handling {task=RetEndOfStream, arguments=[1000]}
Before handling {task=StopRuntimeEnv}
Before tf.traceEvent(101);
Before threadRunningEnvironment.interrupt();
Before threadRunningEnvironment.join();
Before for (int stream_id : streamIdToDataStream.keySet())
ds.addSink(regularSinkFunctions.get(stream_id));
ds.addSink(regularSinkFunctions.get(stream_id));
ds.addSink(regularSinkFunctions.get(stream_id));
org.apache.flink.client.program.ProgramInvocationException: Could not retrieve the execution result. (JobID: dc81e0bb2b812555deaf64fb53cef3f9)
	at org.apache.flink.client.program.rest.RestClusterClient.submitJob(RestClusterClient.java:255)
	at org.apache.flink.client.program.ClusterClient.run(ClusterClient.java:338)
	at org.apache.flink.streaming.api.environment.StreamContextEnvironment.execute(StreamContextEnvironment.java:60)
	at org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1507)
	at org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1489)
	at org.apache.flink.experiments.FlinkExperimentFramework.lambda$StartRuntimeEnv$0(FlinkExperimentFramework.java:518)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.InterruptedException
	at java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:347)
	at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1908)
	at org.apache.flink.client.program.rest.RestClusterClient.submitJob(RestClusterClient.java:252)
	... 6 more
Stopping the execution environment
ds.addSink(regularSinkFunctions.get(stream_id));
Before tf.writeTraceToFile(this.trace_output_folder, this.getClass().getSimpleName());
Trace output written to /home/espen/Research/PhD/Private-WIP/traces/flink/FlinkExperimentFramework-78251174233482-c29789bb-7ec2-4446-b85b-d2559bca89ba.trace
Before return "Success"
After handling {task=StopRuntimeEnv}
Before handling {task=StartRuntimeEnv}
After handling {task=StartRuntimeEnv}
Before handling {task=RetEndOfStream, arguments=[1000]}
Before handling {task=StopRuntimeEnv}
Before tf.traceEvent(101);
Before threadRunningEnvironment.interrupt();
Before threadRunningEnvironment.join();
Before for (int stream_id : streamIdToDataStream.keySet())
ds.addSink(regularSinkFunctions.get(stream_id));
ds.addSink(regularSinkFunctions.get(stream_id));
ds.addSink(regularSinkFunctions.get(stream_id));
ds.addSink(regularSinkFunctions.get(stream_id));
Before tf.writeTraceToFile(this.trace_output_folder, this.getClass().getSimpleName());
Trace output written to /home/espen/Research/PhD/Private-WIP/traces/flink/FlinkExperimentFramework-78251174233482-c29789bb-7ec2-4446-b85b-d2559bca89ba.trace
Before return "Success"
org.apache.flink.client.program.ProgramInvocationException: Could not retrieve the execution result. (JobID: f9fc5215eb8ada3d7c16277568b97033)
	at org.apache.flink.client.program.rest.RestClusterClient.submitJob(RestClusterClient.java:255)
	at org.apache.flink.client.program.ClusterClient.run(ClusterClient.java:338)
	at org.apache.flink.streaming.api.environment.StreamContextEnvironment.execute(StreamContextEnvironment.java:60)
	at org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1507)
	at org.apache.flink.streaming.api.environment.StreamExecutionEnvironment.execute(StreamExecutionEnvironment.java:1489)
	at org.apache.flink.experiments.FlinkExperimentFramework.lambda$StartRuntimeEnv$0(FlinkExperimentFramework.java:518)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.InterruptedException
	at java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:347)
	at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1908)
	at org.apache.flink.client.program.rest.RestClusterClient.submitJob(RestClusterClient.java:252)
	... 6 more
Stopping the execution environment
After handling {task=StopRuntimeEnv}
Before handling {task=EndExperiment, administrative=true, ack=false}
Trace output written to /home/espen/Research/PhD/Private-WIP/traces/flink/FlinkExperimentFramework-78251174233482-c29789bb-7ec2-4446-b85b-d2559bca89ba.trace
